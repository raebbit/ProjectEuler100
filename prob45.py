"""
Project Euler: Problem 45: Triangular, pentagonal, and hexagonal
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle : Tn=n(n+1)/2
1, 3, 6, 10, 15, ...
Pentagonal : Pn=n(3n−1)/2
1, 5, 12, 22, 35, ...
Hexagonal : Hn=n(2n−1)
1, 6, 15, 28, 45, ...

It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
"""
import math 

def is_triangle(x):
    # x is triangular  if and only if n is a natural number.
    n = (math.sqrt(1 + 8 * x) - 1) / 2
    if n - int(n) == 0:
        return True
    else:
        return False

def is_pentagonal(x):
    # x is pantagonal if and only if n is a natural number.
    n = (math.sqrt(24 * x + 1) + 1) / 6
    if n - int(n) == 0: # 0 == 0.0
        return True
    else:
        return False

"""
def is_hexagonal(x):
    # x is hexagonal if and only if n is a natural number. 
    n = (math.sqrt(1 + 8 * x) + 1) / 4
    if n - int(n) == 0:
        return True
    else:
        return False
"""

def tri_penta_hexa(n):
    notfound = True
    i = 143 # H143 = 40775
    while notfound:
        i += 1
        hexa_i = i * (2 * i - 1)
        if is_pentagonal(hexa_i):
            if is_triangle(hexa_i):
                notfound = False
    
    return hexa_i
    
if __name__ == '__main__':
    print(tri_penta_hexa(40775))