"""
Project Euler: Problem 44: Pentagon numbers
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; 
what is the value of D?
"""
import math

def is_pantagonal(x):
    # x is pantagonal if and only if n is a natural number
    n = (math.sqrt(24 * x + 1) + 1.0) / 6.0 
    if n - int(n) == 0: # 0 == 0.0
        return True
    else:
        return False


def pantagon_numbers():
    notfound = True
    i = 1
    while notfound:
        i += 1 
        pi = i * (3 * i - 1) // 2
        for j in range(i-1, 0, -1): # i > j (i is the upper bound of the set of j)
            pj = j * (3 * j - 1) // 2
            if is_pantagonal(pi - pj):
                if is_pantagonal(pi + pj):
                    value_d = pi - pj
                    notfound = False
                    break  # for-loop

    return value_d


if __name__ == '__main__':
    print(pantagon_numbers())
    